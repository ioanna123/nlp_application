name: Run Tests

permissions:
  id-token: write
  contents: read

on:
  workflow_call:

jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      matrix:
        python: [ "3.10" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          poetry install --no-interaction

      - name: Run Unit Tests
        run: |
          poetry run pytest tests/unit/

  functional-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      matrix:
        python: [ "3.10" ]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          PSQL_CONN_URL: postgresql://postgres:postgres@db:5432/postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          poetry install --no-interaction
        
      - name: Run Functional Tests
        run: |
          poetry run pytest tests/functional/
